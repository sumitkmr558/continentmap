{"version":3,"file":"static/js/820.7d469953.chunk.js","mappings":"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","sources":["../node_modules/@mui/system/esm/Stack/createStack.js","../node_modules/@mui/material/esm/Stack/Stack.js","../node_modules/@mui/system/esm/createBox/createBox.js","../node_modules/@mui/material/esm/Box/boxClasses.js","../node_modules/@mui/material/esm/Box/Box.js","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion-utils/dist/es/pipe.mjs","../node_modules/motion-utils/dist/es/clamp.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../node_modules/motion-utils/dist/es/easing/ease.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-utils/dist/es/easing/back.mjs","../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../node_modules/motion-utils/dist/es/easing/circ.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion-utils/dist/es/is-object.mjs","../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../node_modules/motion-dom/dist/es/value/types/int.mjs","../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/motion-dom/dist/es/value/types/auto.mjs","../node_modules/motion-dom/dist/es/value/types/test.mjs","../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport deepmerge from '@mui/utils/deepmerge';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport systemStyled from \"../styled/index.js\";\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport { extendSxProp } from \"../styleFunctionSx/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { handleBreakpoints, mergeBreakpointsInOrder, resolveBreakpointValues } from \"../breakpoints/index.js\";\nimport { createUnarySpacing, getValue } from \"../spacing/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiStack',\n  slot: 'Root'\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiStack',\n    defaultTheme\n  });\n}\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push(/*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = {\n    display: 'flex',\n    flexDirection: 'column',\n    ...handleBreakpoints({\n      theme\n    }, resolveBreakpointValues({\n      values: ownerState.direction,\n      breakpoints: theme.breakpoints.values\n    }), propValue => ({\n      flexDirection: propValue\n    }))\n  };\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      if (ownerState.useFlexGap) {\n        return {\n          gap: getValue(transformer, propValue)\n        };\n      }\n      return {\n        // The useFlexGap={false} implement relies on each child to give up control of the margin.\n        // We need to reset the margin to avoid double spacing.\n        '& > :not(style):not(style)': {\n          margin: 0\n        },\n        '& > :not(style) ~ :not(style)': {\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nexport default function createStack(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiStack'\n  } = options;\n  const useUtilityClasses = () => {\n    const slots = {\n      root: ['root']\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  const StackRoot = createStyledComponent(style);\n  const Stack = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n      component = 'div',\n      direction = 'column',\n      spacing = 0,\n      divider,\n      children,\n      className,\n      useFlexGap = false,\n      ...other\n    } = props;\n    const ownerState = {\n      direction,\n      spacing,\n      useFlexGap\n    };\n    const classes = useUtilityClasses();\n    return /*#__PURE__*/_jsx(StackRoot, {\n      as: component,\n      ownerState: ownerState,\n      ref: ref,\n      className: clsx(classes.root, className),\n      ...other,\n      children: divider ? joinChildren(children, divider) : children\n    });\n  });\n  process.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    divider: PropTypes.node,\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Stack;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createStack } from '@mui/system';\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Stack = createStack({\n  createStyledComponent: styled('div', {\n    name: 'MuiStack',\n    slot: 'Root'\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiStack'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool\n} : void 0;\nexport default Stack;","'use client';\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from \"../styleFunctionSx/index.js\";\nimport useTheme from \"../useTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const {\n      className,\n      component = 'div',\n      ...other\n    } = extendSxProp(inProps);\n    return /*#__PURE__*/_jsx(BoxRoot, {\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme,\n      ...other\n    });\n  });\n  return Box;\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from \"../className/index.js\";\nimport { createTheme } from \"../styles/index.js\";\nimport THEME_ID from \"../styles/identifier.js\";\nimport boxClasses from \"./boxClasses.js\";\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { memo } from 'motion-utils';\nimport { isHTMLElement } from '../../../utils/is-html-element.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!isHTMLElement(motionValue?.owner?.current)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","name","slot","useThemePropsDefault","props","useThemePropsSystem","joinChildren","children","separator","childrenArray","React","toArray","filter","Boolean","reduce","output","child","index","push","length","key","concat","style","_ref","ownerState","theme","styles","_objectSpread","display","flexDirection","handleBreakpoints","resolveBreakpointValues","values","direction","breakpoints","propValue","spacing","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","styleFromPropValue","useFlexGap","gap","getValue","margin","row","column","deepmerge","mergeBreakpointsInOrder","Stack","options","arguments","undefined","createStyledComponent","useThemeProps","componentName","StackRoot","inProps","ref","themeProps","extendSxProp","component","divider","className","other","_objectWithoutProperties","classes","composeClasses","root","generateUtilityClass","_jsx","as","clsx","createStack","styled","useDefaultProps","generateUtilityClasses","Box","themeId","defaultClassName","generateClassName","BoxRoot","shouldForwardProp","prop","styleFunctionSx","useTheme","_extendSxProp","createBox","THEME_ID","boxClasses","ClassNameGenerator","generate","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","get","_target","has","set","isAnimationControls","v","start","getValueState","visualElement","state","value","getVelocity","resolveVariantFromProps","definition","custom","current","velocity","variants","resolveVariant","getProps","getValueTransition","transition","_transition$key","noop","any","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","stepName","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","add","cancel","delete","process","frameData","frameloop","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","Math","max","min","keepAlive","immediate","i","frame","cancelFrame","frameSteps","requestAnimationFrame","transformPropOrder","transformProps","positionalKeys","addUniqueItem","arr","item","indexOf","removeItem","splice","SubscriptionManager","constructor","this","subscriptions","handler","notify","a","b","c","numSubscriptions","getSize","velocityPerSecond","frameDuration","clearTime","time","newTime","queueMicrotask","collectMotionValues","MotionValue","init","_this","canTrackVelocity","events","updateAndNotify","currentTime","_this$events$change","_this$events$renderRe","updatedAt","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","_this$events$change2","addDependent","removeDependent","getPrevious","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","_this$dependents","_this$events$destroy","motionValue","isKeyframesTarget","Array","isArray","setMotionValue","hasValue","addValue","isMotionValue","addValueToWillChange","willChange","WillChange","newWillChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","combineFunctions","pipe","_len","transformers","_key","clamp","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","activeAnimations","layout","mainThread","waapi","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","split","trim","number","parse","transform","alpha","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","type","testProp","isNullish","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","convertNumbersToZero","complex","_v$match","_v$match2","getAnimatableNone","parsed","map","hueToRgb","p","q","t","mixImmediate","mixNumber","from","to","progress","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","target","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","_origin$values$origin","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","easing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","some","spring","optionsOrVisualDuration","keyframes","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","ease","createGeneratorEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","acos","circOut","circInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","speed","resolvedKeyframes","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","super","startTime","isStopped","holdTime","playbackSpeed","_this$options$onStop","_this$options","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","_this$driver","driver","newSpeed","hasChanged","_this$options$onPlay","_this$options2","onPlay","complete","_this$options$onCompl","_this$options3","onComplete","_this$options$onCance","_this$options4","onCancel","stopDriver","sampleTime","attachTimeline","timeline","_this$driver2","allowFlatten","observe","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","paddingLeft","paddingRight","height","_ref3","_ref4","paddingTop","paddingBottom","top","_bbox","_ref5","left","_ref6","bottom","_ref7","_ref8","right","_ref9","_ref0","_ref1","_ref10","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","_element$getValue","measureEndState","suspendedScrollY","window","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","scheduleResolve","currentValue","valueAsRead","readValue","_keyframes$i","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","_supportsFlags$suppor","supportsLinearEasing","document","createElement","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","_options$duration","_options$ease","applyGeneratorOptions","onfinish","keyframe","updateMotionValue","isCSSVar","setProperty","setStyle","_this$animation$finis","_this$animation","commitStyles","_this$animation$commi","_this$animation2","_this$animation$effec","_this$animation$effec2","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","_this$animation$effec3","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","_this$finishedTime","sampleAnimation","isAnimatable","isObject","isHTMLElement","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_this$keyframeResolve2","_this$keyframeResolve","_this$stopTimeline","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","_motionValue$owner","transformTemplate","supportsBrowserAnimation","catch","pendingTimeline","_onReject","_this$keyframeResolve3","_this$keyframeResolve4","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","assign","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animations","animationTypeState","animationState","getState","_visualElement$latest","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","all","setTarget","animateVariant","variant","_visualElement$presen","resolved","presenceContext","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","_visualElement$varian","_child$animationState","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","_this$unmountControls","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","addDomEvent","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","isRefObject","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","_this$getAxisMotionVa","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","_this$visualElement$p","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this$getAxisMotionVa2","_this$getAxisMotionVa3","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","microtask","cancelMicrotask","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","isSVGElement","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","resolveMotionValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","_this$scroll","checkNodeWasScrollRoot","_this$scroll2","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","_this$parent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","_this$parent2","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","_this$options$visualE","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","_lead$opacity","_follow$opacity","opacityExit","_follow$opacity2","_lead$opacity2","borderLabel","followRadius","leadRadius","mixValues","_this$currentAnimatio","_this$resumingFrom","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","_this$getStack","getPrevLead","_this$getStack2","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","_valuesToRender$opaci","transformOrigin","corrected","num","renderState","vars","resetTree","_node$currentAnimatio","_node$resumeFrom","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","_node$scroll","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","_selectorCache$elemen","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","tabIndex","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","isBrowser","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useIsomorphicLayoutEffect","useLayoutEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","_window$MotionHandoff","_window","_window$MotionHasOpti","_window2","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","layoutCrossfade","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","_window$MotionHandoff2","_window3","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","_Component$displayNam","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","int","transformValueTypes","scaleZ","perspective","originZ","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","zIndex","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","_attrs$transformOrigi","_styleProp$transformB","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_unused","lowercaseSVGElements","isSVGComponent","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","_visualElement$getVal","htmlMotionConfig","scrapeMotionValuesFromProps$1","charAt","svgMotionConfig","createMotionComponentFactory","baseConfig","testValueType","dimensionValueTypes","findDimensionValueType","isNumericalString","splitCSSVariableRegex","getVariableValue","fallback","exec","token1","token2","parseCSSVariable","getPropertyValue","trimmed","isZeroValueString","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","_this$removedTransfor","finalKeyframeIndex","unsetTransformName","unsetTransformValue","valueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","_this$getBaseTargetFr","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","_this$presenceContext","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","renderHTML","HTMLVisualElement","_this$projection","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","createDomVisualElement","motion"],"sourceRoot":""}