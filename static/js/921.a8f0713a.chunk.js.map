{"version":3,"file":"static/js/921.a8f0713a.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/esm/Card/cardClasses.js","../node_modules/@mui/material/esm/Card/Card.js","../node_modules/@mui/material/esm/CardContent/cardContentClasses.js","../node_modules/@mui/material/esm/CardContent/CardContent.js","components/worldmap.jsx","pages/WorldMap.jsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getCardUtilityClass } from \"./cardClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  overflow: 'hidden'\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n    className,\n    raised = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    raised\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, {\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardContentUtilityClass } from \"./cardContentClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: 16,\n  '&:last-child': {\n    paddingBottom: 24\n  }\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import React, { useState } from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport worldgeojson from \"../world.geojson\";\nimport countriesData from \"../country.json\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Button,\n  Box,\n  Container,\n  Paper,\n} from \"@mui/material\";\n\nconst WorldMap = () => {\n  const [info, setInfo] = useState(null);\n  console.log(info);\n\n  const handleClick = (country) => {\n    console.log(\"Click event triggered:\", country.name);\n    setInfo(country);\n  };\n\n  return (\n    <>\n      <Container\n        maxWidth=\"lg\"\n        sx={{\n          py: 4,\n          border: \"1px solid #f1f5fa\", // light border\n          borderRadius: 5, // slightly rounded corners\n          backgroundColor: \"#f1f5fa\", // very light grey background\n          boxShadow: 1, // soft shadow\n          mt: 1,\n          mb: 2,\n        }}\n      >\n        <ComposableMap>\n          <Geographies geography={worldgeojson}>\n            {({ geographies }) => {\n              return geographies.map((geo) => {\n                const country = countriesData.find(\n                  (c) =>\n                    c.name.toLowerCase() === geo.properties.name?.toLowerCase()\n                );\n\n                return (\n                  <Geography\n                    key={geo.rsmKey}\n                    geography={geo}\n                    onClick={() => {\n                      if (country) {\n                        handleClick(country);\n                      }\n                    }}\n                    style={{\n                      default: { fill: \"#D6D6DA\", outline: \"none\" },\n                      hover: { fill: \"#F53\", outline: \"none\" },\n                      pressed: { fill: \"#E42\", outline: \"none\" },\n                    }}\n                  />\n                );\n              });\n            }}\n          </Geographies>\n        </ComposableMap>\n\n        {info && (\n          <Card\n            className=\"popup\"\n            style={{ display: \"flex\", justifyContent: \"center\" }}\n            sx={{ borderRadius: 5, width: 300 }}\n          >\n            <CardContent>\n              <Typography variant=\"h5\" gutterBottom>\n                {info.name}\n              </Typography>\n              <Typography variant=\"body1\" color=\"textSecondary\">\n                <strong>Capital:</strong> {info.capital}\n              </Typography>\n              <Typography variant=\"body1\" color=\"textSecondary\">\n                <strong>Continent:</strong> {info.continent}\n              </Typography>\n              <Typography variant=\"body1\" color=\"textSecondary\">\n                <strong>Area:</strong> {info.area} sq km\n              </Typography>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => setInfo(null)}\n                sx={{ marginTop: 2 }}\n              >\n                Close\n              </Button>\n            </CardContent>\n          </Card>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default WorldMap;\n","import React from \"react\";\nimport MapComponent from \"../components/worldmap\"; // no typo here\n\nexport default function MapPage() {\n  return (\n    <>\n      <MapComponent />\n    </>\n  );\n}\n"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useDefaultProps","className","raised","other","ownerState","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","component","as","WorldMap","info","setInfo","useState","console","log","_Fragment","children","_jsxs","Container","maxWidth","sx","py","border","borderRadius","backgroundColor","boxShadow","mt","mb","ComposableMap","Geographies","geography","worldgeojson","_ref","geographies","map","geo","country","countriesData","find","c","_geo$properties$name","toLowerCase","properties","Geography","onClick","handleClick","style","default","fill","outline","hover","pressed","rsmKey","Card","display","justifyContent","width","CardContent","Typography","variant","gutterBottom","color","capital","continent","area","Button","marginTop","MapPage","MapComponent"],"sourceRoot":""}