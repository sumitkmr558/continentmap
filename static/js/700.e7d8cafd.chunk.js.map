{"version":3,"file":"static/js/700.e7d8cafd.chunk.js","mappings":"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","sources":["../node_modules/@mui/system/esm/Stack/createStack.js","../node_modules/@mui/material/esm/Stack/Stack.js","../node_modules/@mui/material/esm/Box/boxClasses.js","../node_modules/@mui/material/esm/Box/Box.js","../node_modules/@mui/system/esm/createBox/createBox.js","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion-utils/dist/es/pipe.mjs","../node_modules/motion-utils/dist/es/clamp.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../node_modules/motion-dom/dist/es/animation/drivers/driver-frameloop.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../node_modules/motion-utils/dist/es/easing/ease.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-utils/dist/es/easing/back.mjs","../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../node_modules/motion-utils/dist/es/easing/circ.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../node_modules/motion-dom/dist/es/value/types/int.mjs","../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/motion-dom/dist/es/value/types/auto.mjs","../node_modules/motion-dom/dist/es/value/types/test.mjs","../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport deepmerge from '@mui/utils/deepmerge';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport systemStyled from \"../styled/index.js\";\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport { extendSxProp } from \"../styleFunctionSx/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { handleBreakpoints, mergeBreakpointsInOrder, resolveBreakpointValues } from \"../breakpoints/index.js\";\nimport { createUnarySpacing, getValue } from \"../spacing/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiStack',\n    defaultTheme\n  });\n}\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push(/*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = {\n    display: 'flex',\n    flexDirection: 'column',\n    ...handleBreakpoints({\n      theme\n    }, resolveBreakpointValues({\n      values: ownerState.direction,\n      breakpoints: theme.breakpoints.values\n    }), propValue => ({\n      flexDirection: propValue\n    }))\n  };\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      if (ownerState.useFlexGap) {\n        return {\n          gap: getValue(transformer, propValue)\n        };\n      }\n      return {\n        // The useFlexGap={false} implement relies on each child to give up control of the margin.\n        // We need to reset the margin to avoid double spacing.\n        '& > :not(style):not(style)': {\n          margin: 0\n        },\n        '& > :not(style) ~ :not(style)': {\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nexport default function createStack(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiStack'\n  } = options;\n  const useUtilityClasses = () => {\n    const slots = {\n      root: ['root']\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  const StackRoot = createStyledComponent(style);\n  const Stack = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n      component = 'div',\n      direction = 'column',\n      spacing = 0,\n      divider,\n      children,\n      className,\n      useFlexGap = false,\n      ...other\n    } = props;\n    const ownerState = {\n      direction,\n      spacing,\n      useFlexGap\n    };\n    const classes = useUtilityClasses();\n    return /*#__PURE__*/_jsx(StackRoot, {\n      as: component,\n      ownerState: ownerState,\n      ref: ref,\n      className: clsx(classes.root, className),\n      ...other,\n      children: divider ? joinChildren(children, divider) : children\n    });\n  });\n  process.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    divider: PropTypes.node,\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Stack;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createStack } from '@mui/system';\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Stack = createStack({\n  createStyledComponent: styled('div', {\n    name: 'MuiStack',\n    slot: 'Root',\n    overridesResolver: (props, styles) => styles.root\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiStack'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool\n} : void 0;\nexport default Stack;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from \"../className/index.js\";\nimport { createTheme } from \"../styles/index.js\";\nimport THEME_ID from \"../styles/identifier.js\";\nimport boxClasses from \"./boxClasses.js\";\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","'use client';\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from \"../styleFunctionSx/index.js\";\nimport useTheme from \"../useTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const {\n      className,\n      component = 'div',\n      ...other\n    } = extendSxProp(inProps);\n    return /*#__PURE__*/_jsx(BoxRoot, {\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme,\n      ...other\n    });\n  });\n  return Box;\n}","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.9.1\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.count = 0;\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this.count++;\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n    }\n    teardown() {\n        this.notifyFinished();\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { parseValueFromTransform, readTransformValue };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForced = false) {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForced);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n        /**\n         * TODO: In a breaking change, we should replace this with `.notifyCancel()`\n         */\n        this.animation.oncancel = () => this.notifyFinished();\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!motionValue ||\n        !motionValue.owner ||\n        !(motionValue.owner.current instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            else {\n                this.keyframeResolver?.cancel();\n            }\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        this.animation.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (target instanceof HTMLElement) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { transformPropOrder } from 'motion-dom';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { motionValue } from 'motion-dom';\nimport { warnOnce } from 'motion-utils';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.9.2\", `Attempting to mix Motion versions ${nextValue.version} with 12.9.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","name","slot","overridesResolver","props","styles","root","useThemePropsDefault","useThemePropsSystem","joinChildren","children","separator","childrenArray","React","toArray","filter","Boolean","reduce","output","child","index","push","length","key","style","_ref","ownerState","theme","display","flexDirection","handleBreakpoints","resolveBreakpointValues","values","direction","breakpoints","propValue","spacing","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","styleFromPropValue","useFlexGap","gap","getValue","margin","row","column","deepmerge","mergeBreakpointsInOrder","Stack","options","arguments","undefined","createStyledComponent","useThemeProps","componentName","StackRoot","inProps","ref","themeProps","extendSxProp","component","divider","className","other","classes","composeClasses","generateUtilityClass","_jsx","as","clsx","createStack","styled","useDefaultProps","generateUtilityClasses","Box","themeId","defaultClassName","generateClassName","BoxRoot","shouldForwardProp","prop","styleFunctionSx","useTheme","createBox","THEME_ID","boxClasses","ClassNameGenerator","generate","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","get","_target","has","set","isAnimationControls","v","start","getValueState","visualElement","state","value","getVelocity","resolveVariantFromProps","definition","custom","current","velocity","variants","resolveVariant","getProps","getValueTransition","transition","noop","any","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","stepName","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","add","cancel","delete","process","frameData","frameloop","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","Math","max","min","keepAlive","immediate","i","frame","cancelFrame","frameSteps","requestAnimationFrame","transformPropOrder","transformProps","positionalKeys","addUniqueItem","arr","item","indexOf","removeItem","splice","SubscriptionManager","constructor","this","subscriptions","handler","notify","a","b","c","numSubscriptions","getSize","velocityPerSecond","frameDuration","clearTime","time","newTime","queueMicrotask","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isKeyframesTarget","Array","isArray","setMotionValue","hasValue","addValue","isMotionValue","addValueToWillChange","willChange","WillChange","newWillChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","combineFunctions","pipe","_len","transformers","_key","clamp","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","activeAnimations","layout","mainThread","waapi","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","split","trim","number","parse","transform","alpha","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","type","testProp","isNullish","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","convertNumbersToZero","complex","getAnimatableNone","parsed","map","hueToRgb","p","q","t","mixImmediate","mixNumber","from","to","progress","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","target","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","easing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","some","spring","optionsOrVisualDuration","keyframes","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","ease","createGeneratorEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","acos","circOut","circInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","speed","resolvedKeyframes","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","count","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","super","startTime","isStopped","holdTime","playbackSpeed","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","complete","onComplete","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","paddingLeft","paddingRight","height","_ref3","_ref4","paddingTop","paddingBottom","top","_bbox","_ref5","left","_ref6","bottom","_ref7","_ref8","right","_ref9","_ref10","_ref11","_ref12","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","window","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","resume","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","onfinish","keyframe","updateMotionValue","isCSSVar","setProperty","setStyle","oncancel","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","HTMLElement","transformTemplate","supportsBrowserAnimation","catch","pendingTimeline","_onReject","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","assign","shouldSkip","skipAnimations","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animations","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","all","resolved","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","addDomEvent","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","isRefObject","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","microtask","cancelMicrotask","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","resolveMotionValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","tabIndex","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","isBrowser","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useIsomorphicLayoutEffect","useLayoutEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","layoutCrossfade","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","perspective","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","lowercaseSVGElements","isSVGComponent","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","scrapeMotionValuesFromProps$1","charAt","svgMotionConfig","createMotionComponentFactory","testValueType","dimensionValueTypes","findDimensionValueType","isNumericalString","splitCSSVariableRegex","getVariableValue","fallback","exec","token1","token2","parseCSSVariable","getPropertyValue","trimmed","isZeroValueString","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","valueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","renderHTML","HTMLVisualElement","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","motion","createDomVisualElement"],"sourceRoot":""}